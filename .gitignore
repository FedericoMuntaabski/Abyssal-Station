# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Linker files
*.ilk

# Debugger Files
*.pdb

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app

# debug information files
*.dwo

# =========================
# Compilaci√≥n / Binarios
# =========================
/build/
/bin/
/obj/
*.exe
*.out
*.o
*.a
*.lib

# =========================
# Visual Studio Code
# =========================
.vscode/

# =========================
# CMake
# =========================
CMakeFiles/
CMakeCache.txt
cmake_install.cmake
Makefile

# Visual Studio
.vs/
*.suo
*.user
*.userosscache
*.sln.docstates
*.VC.db
*.VC.opendb

# Visual C++ project user options
*.vcxproj.user

# Visual Studio build folders
/Release/
/x64/Release/

# Windows thumbnail cache and system files
Thumbs.db
ehthumbs.db
Desktop.ini

# macOS
.DS_Store

# JetBrains IDEs
.idea/
*.iml

# VS Code (ensure workspace settings preserved)
.vscode/*
!/.vscode/settings.json

# Logs and databases
*.log
*.sql
*.sqlite

# Test results
TestResults/
coverage/

# Temporary files
*~
*.swp
*.tmp
*.temp

# Python
__pycache__/
*.py[cod]
*.pyc
*.pyo
env/
.venv/

# Node
node_modules/
npm-debug.log*
package-lock.json
yarn.lock

# Archives
*.zip
*.tar.gz
*.rar
*.7z

# Coverage and profiler outputs
*.gcda
*.gcno
*.gcov

# CPack
CPackConfig.cmake

# =========================
# Project assets (ignore large binary assets by default)
# If you want to keep small placeholder files (like README), whitelist them with a '!' rule.
# Note: files already committed remain tracked; to untrack a committed asset use: git rm --cached <file>
# =========================
/assets/*.png
/assets/*.jpg
/assets/*.jpeg
/assets/*.bmp
/assets/*.wav
/assets/*.ogg
/assets/*.flac
/assets/*.mp3
!/assets/README.md